////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mux4to1_drc.vf
// /___/   /\     Timestamp : 01/22/2018 17:54:32
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog Mux4to1_drc.vf -w "C:/Users/Bo/Dropbox/School/Spring 2018/CDA 4203L Computer System Design Lab/Lab 1 - Introduction to Schematic Capture/lab_1/Mux4to1.sch"
//Design Name: Mux4to1
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mux4to1(A_in, 
               B_in, 
               C_in, 
               D_in, 
               S0, 
               S1, 
               Mux_out);

    input A_in;
    input B_in;
    input C_in;
    input D_in;
    input S0;
    input S1;
   output Mux_out;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_9;
   wire XLXN_10;
   
   AND3  XLXI_1 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .I2(A_in), 
                .O(XLXN_1));
   AND3  XLXI_2 (.I0(S0), 
                .I1(XLXN_10), 
                .I2(B_in), 
                .O(XLXN_2));
   AND3  XLXI_3 (.I0(S1), 
                .I1(XLXN_9), 
                .I2(C_in), 
                .O(XLXN_3));
   AND3  XLXI_4 (.I0(S1), 
                .I1(S0), 
                .I2(D_in), 
                .O(XLXN_4));
   OR4  XLXI_5 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(Mux_out));
   INV  XLXI_7 (.I(S0), 
               .O(XLXN_9));
   INV  XLXI_8 (.I(S1), 
               .O(XLXN_10));
endmodule
